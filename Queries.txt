/*Query 1 - This query will generate the lists each movie, the film category it is classified in, and the number of times it has been rented out */

WITH temp1
AS (SELECT
  fi.film_id id,
  fi.title film_title,
  ca.name category_name
FROM film fi
JOIN film_category fa
  ON fi.film_id = fa.film_id
JOIN category ca
  ON ca.category_id = fa.category_id
WHERE ca.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music'))

SELECT
  t1.film_title,
  t1.category_name,
  COUNT(re.rental_id) rental_count
FROM temp1 t1
JOIN inventory inv
  ON t1.id = inv.film_id
JOIN rental re
  ON inv.inventory_id = re.inventory_id
GROUP BY 1,
         2
ORDER BY 2, 1
************************************************************************************
/*Query 2 - This query will generate the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories */

SELECT
  fi.title title,
  ca.name,
  fi.rental_duration,
  NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM film fi
JOIN film_category fa
  ON fi.film_id = fa.film_id
JOIN category ca
  ON ca.category_id = fa.category_id
WHERE ca.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3
************************************************************************************
/* Query 3 -  To capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers in 2007 */

WITH t1 AS(
SELECT
  CONCAT(cu.first_name, ' ', cu.last_name) full_name,
  SUM(pa.amount) AS amount_total,
  cu.customer_id
FROM customer cu
JOIN payment pa
  ON pa.customer_id = cu.customer_id
GROUP BY 1, 3
ORDER BY 2 DESC
LIMIT 10)

SELECT
  DATE_TRUNC('month', pa.payment_date) pay_month,
  CONCAT(cu.first_name, ' ', cu.last_name) full_name,
  COUNT(pa.amount) AS pay_countpermon,
  SUM(pa.amount) AS pay_amount
FROM customer cu
JOIN payment pa
  ON pa.customer_id = cu.customer_id
JOIN t1
  ON t1.customer_id = pa.customer_id
WHERE CONCAT(cu.first_name, ' ', cu.last_name) IN (SELECT
  t1.full_name
FROM t1)
AND pa.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
GROUP BY 2, 1
ORDER BY 2, 1, 3
************************************************************************************
/*Query 4 - To compare the payment amounts for the top 10 paying customers in 2007 for each successive month */ 

WITH t1 AS(
SELECT
  CONCAT(cu.first_name, ' ', cu.last_name) full_name,
  SUM(pa.amount) AS amount_total,
  cu.customer_id
FROM customer cu
JOIN payment pa
  ON pa.customer_id = cu.customer_id
GROUP BY 1, 3
ORDER BY 2 DESC
LIMIT 10)


SELECT
  pay_month,
  full_name,
  pay_amount current_month,
  LEAD(pay_amount) OVER (PARTITION BY full_name ORDER BY full_name) next_month,
  LEAD(pay_amount) OVER (PARTITION BY full_name ORDER BY full_name) - pay_amount DIFF
FROM (SELECT
  DATE_TRUNC('month', pa.payment_date) pay_month,
  CONCAT(cu.first_name, ' ', cu.last_name) full_name,
  COUNT(pa.amount) AS pay_countpermon,
  SUM(pa.amount) AS pay_amount
FROM customer cu
JOIN payment pa
  ON pa.customer_id = cu.customer_id
JOIN t1
  ON t1.customer_id = pa.customer_id
WHERE CONCAT(cu.first_name, ' ', cu.last_name) IN (SELECT
  t1.full_name
FROM t1)
AND pa.payment_date BETWEEN '2007-01-01' AND '2008-01-01'
GROUP BY 2,1
ORDER BY 2, 1, 3) sub
ORDER BY 2